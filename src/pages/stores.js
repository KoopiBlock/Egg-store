import Head from 'next/head'
import { FaExternalLinkAlt } from 'react-icons/fa';

import Layout from '@components/Layout';
import Container from '@components/Container';
import Button from '@components/Button';

import styles from '@styles/Page.module.scss'

import { 
  ApolloClient,
  InMemoryCache,
  gql, 
  } from '@apollo/client';

  

export default function Stores({ storeLocations }) {
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <h1>Locations</h1>

        <div className={styles.stores}>

          <div className={styles.storesLocations}>
            <ul className={styles.locations}>
              {storeLocations.map(location => {
                return (             
              <li key={location.id}>
                <p className={styles.locationName}>
                  {location.name}
                </p>
                <address>
                  {location.address}
                </address>
                <p>
                  {location.phoneNumber}
                </p>
                <p className={styles.locationDiscovery}>
                  <button>
                    View on Map
                  </button>
                  <a href={`https://www.google.com/maps/dir//${location.location.latitude},${location.location.longitude}`} target="_blank" rel="noreferrer">
                    Get Directions
                    <FaExternalLinkAlt />
                  </a>
                </p>
              </li>
               )
              })}
            </ul>
          </div>

          <div className={styles.storesMap}>
            <div className={styles.storesMapContainer}>
              <div className={styles.map}>
             
              </div>
            </div>
          </div>
        </div>
      </Container>
    </Layout>
  )
}


export async function getStaticProps({ params }) {

  const client = new ApolloClient({
    uri: 'https://api-eu-west-2.hygraph.com/v2/cl94h07cc52ae01uke8ms0jxr/master',
    cache: new InMemoryCache(),
  });

  const data = await client.query({
    query: gql`
    query StoresPage {
      storeLocations {
        id
        name
        phoneNumber
        address
        location {
          latitude
          longitude
        }
      }
    }
    `
  })

 const storeLocations = data.data.storeLocations

 console.log(data)
  return {
    props: {
      storeLocations
    }
  }
}
